# Generated by Django 5.0.3 on 2024-03-14 12:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("corecode", "0001_initial"),
        ("course", "0001_initial"),
        ("enquiry", "0001_initial"),
        ("staffs", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="StudentBulkUpload",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_uploaded", models.DateTimeField(auto_now=True)),
                ("csv_file", models.FileField(upload_to="students/bulkupload/")),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=20)),
                ("password", models.CharField(max_length=20)),
                (
                    "current_status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=10,
                    ),
                ),
                (
                    "student_name",
                    models.CharField(
                        default="", max_length=255, verbose_name="Student Name"
                    ),
                ),
                (
                    "enrol_no",
                    models.IntegerField(
                        default=0, unique=True, verbose_name="Enrollment Number"
                    ),
                ),
                (
                    "rel_name",
                    models.CharField(
                        default=None, max_length=255, verbose_name="Father/Husband Name"
                    ),
                ),
                (
                    "rel_occupation",
                    models.CharField(
                        default=None,
                        max_length=255,
                        verbose_name="Father/Husband Occupation",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Date of Birth"
                    ),
                ),
                ("age", models.IntegerField(blank=True, default=0, verbose_name="Age")),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("others", "others"),
                        ],
                        default="male",
                        max_length=10,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "religion",
                    models.CharField(
                        choices=[
                            ("Hindu", "Hindu"),
                            ("Christian", "Christian"),
                            ("Muslim", "Muslim"),
                            ("others", "others"),
                        ],
                        default="Hindu",
                        max_length=554,
                        verbose_name="Religion",
                    ),
                ),
                (
                    "community",
                    models.CharField(
                        choices=[
                            ("OC", "OC"),
                            ("BC", "BC"),
                            ("MBC", "MBC"),
                            ("ST/SC", "ST/SC"),
                            ("others", "others"),
                        ],
                        default="OC",
                        max_length=524,
                        verbose_name="Community",
                    ),
                ),
                (
                    "occupation",
                    models.CharField(
                        choices=[
                            ("Employed", "Employed"),
                            ("Unemployed", "Unemployed"),
                            ("Housewife", "Housewife"),
                            ("Businessman", "Businessman"),
                            ("Student", "Student"),
                            ("Others", "Others"),
                        ],
                        default="Student",
                        max_length=1024,
                        verbose_name="Student Occupation",
                    ),
                ),
                (
                    "student_company_name",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="If Emloyed Company Name",
                    ),
                ),
                (
                    "aadhar_no",
                    models.BigIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Aadhar Number",
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(
                        blank=True,
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Entered mobile number isn't in a right format!",
                                regex="^[0-9]{10,15}$",
                            )
                        ],
                        verbose_name="Mobile Number",
                    ),
                ),
                (
                    "email",
                    models.EmailField(default="", max_length=254, verbose_name="Email"),
                ),
                (
                    "passport",
                    models.ImageField(
                        blank=True,
                        upload_to="students/passports/",
                        verbose_name="Photo",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, default=None, max_length=255, verbose_name="Address"
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Address Line 2",
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Address Line 3",
                    ),
                ),
                (
                    "taluka",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Taluk",
                    ),
                ),
                (
                    "district",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="District",
                    ),
                ),
                (
                    "pincode",
                    models.IntegerField(
                        blank=True, default=None, verbose_name="Pincode"
                    ),
                ),
                (
                    "date_of_admission",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "total_fee",
                    models.IntegerField(default=0, verbose_name="Total Fees"),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, default=None, max_length=500, verbose_name="Remark"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "class_time",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="corecode.time",
                        verbose_name="Class Timing",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="course.coursemodel",
                    ),
                ),
                (
                    "if_enq",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="enquiry.enquiry",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["enrol_no"],
            },
        ),
        migrations.CreateModel(
            name="Exammodel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exam_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Examed date"
                    ),
                ),
                (
                    "contected_mode",
                    models.CharField(
                        blank=True,
                        choices=[("Online", "Online"), ("Offline", "Offline")],
                        default=None,
                        max_length=255,
                        null=True,
                        verbose_name="Contected mode",
                    ),
                ),
                (
                    "theory_mark",
                    models.FloatField(
                        blank=True, default=None, null=True, verbose_name="Theory mark"
                    ),
                ),
                (
                    "paratical_mark",
                    models.FloatField(
                        blank=True, default=None, verbose_name="Paratical mark"
                    ),
                ),
                ("mark", models.FloatField(blank=True, verbose_name="Total mark")),
                (
                    "remark",
                    models.CharField(
                        blank=True, default=None, max_length=2046, verbose_name="Remark"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="corecode.subject",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="students.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classmodel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "finised_subject",
                    models.CharField(
                        default=None, max_length=255, verbose_name="Finised Subject"
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Started on")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="Ended on"),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, default=None, max_length=2046, verbose_name="Remark"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "class_time",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="corecode.time",
                        verbose_name="Class Timing",
                    ),
                ),
                (
                    "faculty",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="staffs.staff",
                        verbose_name="Handled Staff",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="students.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Certificatemodel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_of_complete",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Date of Completion",
                    ),
                ),
                (
                    "certificate_no",
                    models.IntegerField(
                        blank=True, default=None, verbose_name="Certificate Number"
                    ),
                ),
                (
                    "certificate_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Certificate Date",
                    ),
                ),
                (
                    "certificate_issued_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Certificate Issued Date",
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=10,
                        verbose_name="Grade on Certificate",
                    ),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, default=None, max_length=2046, verbose_name="Remark"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="course.coursemodel",
                    ),
                ),
                (
                    "issued_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="staffs.staff",
                        verbose_name="Certificate Issued By",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="students.student",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bookmodel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "received_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Book received Date",
                    ),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, default=None, max_length=2046, verbose_name="Remark"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "handled_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="staffs.staff",
                        verbose_name="Handled Staff",
                    ),
                ),
                (
                    "received_book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="corecode.book"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="students.student",
                    ),
                ),
            ],
        ),
    ]
